-- Main GUI Script for GitHub

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local WallHackButton = Instance.new("TextButton")
local AimButton = Instance.new("TextButton")
local InfJumpButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local UICornerMainFrame = Instance.new("UICorner")
local UICornerButtons = Instance.new("UICorner")
local UICornerCloseButton = Instance.new("UICorner")

-- GUI Properties
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)

-- Add UICorner to MainFrame
UICornerMainFrame.CornerRadius = UDim.new(0, 12)
UICornerMainFrame.Parent = MainFrame

ScrollingFrame.Parent = MainFrame
ScrollingFrame.Size = UDim2.new(1, 0, 1, -50)
ScrollingFrame.Position = UDim2.new(0, 0, 0, 50)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)

-- Helper function to apply rainbow effect to buttons
local function rainbowEffect(button)
    spawn(function()
        while true do
            for hue = 0, 1, 0.01 do
                button.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
                wait(0.1)
            end
        end
    end)
end

-- Wall Hack Button
WallHackButton.Parent = ScrollingFrame
WallHackButton.Text = "Wall Hacks"
WallHackButton.Size = UDim2.new(0, 250, 0, 50)
WallHackButton.Position = UDim2.new(0, 25, 0, 10)

-- Add UICorner to WallHackButton
UICornerButtons.CornerRadius = UDim.new(0, 12)
local UICornerWallHack = UICornerButtons:Clone()
UICornerWallHack.Parent = WallHackButton

rainbowEffect(WallHackButton)

local wallHackEnabled = false
WallHackButton.MouseButton1Click:Connect(function()
    wallHackEnabled = not wallHackEnabled
    if wallHackEnabled then
        -- Wall hack code (local only, change character color to red)
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local character = player.Character
                if character then
                    for _, part in pairs(character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 0.5
                            part.BrickColor = BrickColor.new("Bright red")
                        end
                    end
                end
            end
        end
    else
        -- Reset transparency and color
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local character = player.Character
                if character then
                    for _, part in pairs(character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 0
                            part.BrickColor = BrickColor.new("Medium stone grey")
                        end
                    end
                end
            end
        end
    end
end)

-- Aim Button
AimButton.Parent = ScrollingFrame
AimButton.Text = "Aim Lock"
AimButton.Size = UDim2.new(0, 250, 0, 50)
AimButton.Position = UDim2.new(0, 25, 0, 70)

-- Add UICorner to AimButton
local UICornerAim = UICornerButtons:Clone()
UICornerAim.Parent = AimButton

rainbowEffect(AimButton)

local aimLockEnabled = false
AimButton.MouseButton1Click:Connect(function()
    aimLockEnabled = not aimLockEnabled
    if aimLockEnabled then
        -- Aim lock code (local only)
        local camera = game.Workspace.CurrentCamera
        local localPlayer = game.Players.LocalPlayer
        local targetPlayer

        game:GetService("RunService").RenderStepped:Connect(function()
            if aimLockEnabled then
                -- Find the nearest player
                local nearestDistance = math.huge
                for _, player in pairs(game.Players:GetPlayers()) do
                    if player ~= localPlayer and player.Character then
                        local char = player.Character
                        local head = char:FindFirstChild("Head")
                        if head then
                            local distance = (localPlayer.Character.Head.Position - head.Position).Magnitude
                            if distance < nearestDistance then
                                nearestDistance = distance
                                targetPlayer = head
                            end
                        end
                    end
                end

                -- Aim at target
                if targetPlayer then
                    camera.CFrame = CFrame.new(camera.CFrame.Position, targetPlayer.Position)
                end
            end
        end)
    end
end)

-- Infinite Jump Button
InfJumpButton.Parent = ScrollingFrame
InfJumpButton.Text = "Infinite Jump"
InfJumpButton.Size = UDim2.new(0, 250, 0, 50)
InfJumpButton.Position = UDim2.new(0, 25, 0, 130)

-- Add UICorner to InfJumpButton
local UICornerInfJump = UICornerButtons:Clone()
UICornerInfJump.Parent = InfJumpButton

rainbowEffect(InfJumpButton)

local infJumpEnabled = false
InfJumpButton.MouseButton1Click:Connect(function()
    infJumpEnabled = not infJumpEnabled
    if infJumpEnabled then
        -- Infinite jump code (local only)
        localPlayer = game.Players.LocalPlayer
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if infJumpEnabled then
                localPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
            end
        end)
    end
end)

-- Close Button
CloseButton.Parent = MainFrame
CloseButton.Text = "X"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

-- Add UICorner to CloseButton
UICornerCloseButton.CornerRadius = UDim.new(0, 12)
UICornerCloseButton.Parent = CloseButton

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui.Enabled = false
end)

-- Make GUI Draggable
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
